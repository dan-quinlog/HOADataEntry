type Owner @model @auth(rules: [{allow: private}]) {
  id: ID!
  type: String @default(value: "Owner") @index(name: "ownersByName", queryField: "ownersByName", sortKeyFields: ["name"])
  name: String!
  address1: String!
  address2: String
  city: String!
  state: String!
  zip: String!
  email: String
  phone: String
  units: [Unit] @hasMany
  payments: [Payment] @hasMany(indexName: "byOwner", fields: ["id"])
}

type Unit @model @auth(rules: [{allow: private}]) {
  id: ID!
  unitNumber: String!
  owner: Owner! @belongsTo
}

type Payment @model @auth(rules: [{allow: private}]) {
  id: ID!
  type: String @default(value: "Payment") @index(name: "paymentsByDate", queryField: "paymentsByDate", sortKeyFields: ["checkDate"])
  checkDate: AWSDate!
  checkNumber: String!
  checkAmount: Float!
  invoiceNumber: String!
  invoiceAmount: Float!
  owner: Owner! @belongsTo(fields: ["ownerPaymentsId"])
  ownerPaymentsId: ID! @index(name: "byOwner", sortKeyFields: ["checkDate"])
}

input CreateOwnerInput {
  name: String!
  address1: String!
  address2: String
  city: String!
  state: String!
  zip: String!
  email: String
  phone: String
  units: [CreateUnitInput]
  payments: [CreatePaymentInput]
}

input CreateUnitInput {
  unitNumber: String!
}

input CreatePaymentInput {
  checkDate: String!
  checkNumber: String!
  checkAmount: String!
  invoiceNumber: String!
  invoiceAmount: String!
  ownerPaymentsId: ID!
}
